import { yupResolver } from '@hookform/resolvers/yup';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import { useForm } from 'react-hook-form';
import { object, string } from 'yup';

type Theme = 'dark' | 'light';

type Payload = {
  mail: string;
  password: string;
};

const schema = object({
  mail: string().required('Mail is required').email('Invalid email address.'),
  password: string()
    .required('Password is required.')
    .min(8, ({ min }) => `Password must be at least ${min} characters long.`),
}).required();

const Home: NextPage = () => {
  const [theme, setTheme] = useState<Theme>('dark');
  const router = useRouter();

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<Payload>({
    resolver: yupResolver(schema),
  });

  const onSubmit = (data: Payload) => {
    //
    router.push('/dashboard?rajko=astooo?');
  };

  useEffect(() => {
    setTheme(localStorage.getItem('theme') as Theme);
    theme === 'dark'
      ? document.documentElement.classList.add('dark')
      : document.documentElement.classList.remove('dark');
  }, []);

  const handleChange = () => {
    setTheme((prev) => (prev === 'dark' ? 'light' : 'dark'));
    localStorage.setItem('theme', theme!);
    theme === 'dark'
      ? document.documentElement.classList.add('dark')
      : document.documentElement.classList.remove('dark');
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-full px-52">
        <div className="container flex justify-start">
          <button className="px-8 py-4 text-sm text-blue-100 bg-blue-500 dark:bg-gray-800" onClick={handleChange}>
            Change theme
          </button>
        </div>
      </div>
      <div className="w-full p-12">
        <div className="container flex justify-center mx-auto">
          <div className="w-1/2 p-12 bg-white dark:bg-gray-800">
            <form onSubmit={handleSubmit(onSubmit)}>
              <div className="relative z-0 w-full mb-6 group">
                <input
                  {...register('mail')}
                  type="text"
                  name="mail"
                  className="block py-2.5 px-0 w-full form-Input text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                  placeholder=" "
                />
                <label
                  htmlFor="floating_email"
                  className="absolute form-Input text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                >
                  Email address
                </label>
                <p className="text-red-500">{errors.mail?.message}</p>
              </div>
              <div className="relative z-0 w-full mb-6 group">
                <input
                  {...register('password')}
                  type="password"
                  name="password"
                  className="block py-2.5 px-0 w-full form-Input text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                  placeholder=" "
                />
                <label
                  htmlFor="password"
                  className="absolute form-Input text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                >
                  Password
                </label>
                <p className="text-red-500">{errors.password?.message}</p>
              </div>
              <div className="w-full">
                <button type="submit" className="block px-8 py-4 mx-auto text-blue-100 bg-blue-500 rounded">
                  Submit
                </button>
              </div>
            </form>
          </div>
          <div className="w-1/2 p-12 bg-gray-500"></div>
        </div>
      </div>
    </>
  );
};

export default Home;
